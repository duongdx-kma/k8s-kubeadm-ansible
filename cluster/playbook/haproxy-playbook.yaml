- name: Setup load balancers
  hosts: load_balancer
  become: yes
  vars_files:
    - vars.yaml
  tasks:
    - name: Install haproxy
      apt:
        name: haproxy
        state: present
        update_cache: yes

    - name: Configure haproxy
      template:
        src: ../templates/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg

    - name: Restart haproxy
      systemd:
        name: haproxy
        state: restarted
        enabled: yes
        daemon-reload: yes

    # Keepalived for Virtual IP
    - name: Install keepalived
      apt:
        name:
          - keepalived
        state: present
        update_cache: yes

    - name: Get host index
      debug:
        msg: "Index of {{ item }} is {{ ansible_play_hosts.index(item) }}"
      with_items: "{{ ansible_play_hosts  }}"
      run_once: true

    - name: Create master keepalived.conf
      template:
        src: ../templates/keepalived.conf
        dest: /etc/keepalived/keepalived.conf
      vars: 
        keepalived_state:  "{{ keepalived_master_state }}"
        keepalived_priority: "{{ keepalived_priority_default }}"
      when: inventory_hostname == "haproxy01"
      notify: Restart keepalived

    - name: Create backup keepalived.conf
      template:
        src: ../templates/keepalived.conf
        dest: /etc/keepalived/keepalived.conf
      vars: 
        keepalived_state:  "{{ keepalived_master_backup }}"
        keepalived_priority: "{{ 200 - ansible_play_hosts.index(item) | int }}"
      loop: "{{ ansible_play_hosts_all }}"
      loop_control:
        loop_var: item
      when: inventory_hostname != "haproxy01"

  handlers:
    - name: Restart keepalived
      systemd:
        name: keepalived
        state: restarted
        enabled: yes
        daemon-reload: yes