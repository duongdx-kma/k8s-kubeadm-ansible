apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      run: backend
  template:
    metadata:
      labels:
        run: backend
    spec:
      containers:
      - name: backend
        image: duong1200798/golang_backend:v1
        ports:
          - name: backend-port
            containerPort: 8088
        # config env
        env:
          - name: APP_PORT
            valueFrom:
              configMapKeyRef:
                name: backend-configmap
                key: app-port
          - name: APP_ENV
            valueFrom:
              configMapKeyRef:
                key: app-env
                name: backend-configmap
          - name: DB_DRIVER
            valueFrom:
              configMapKeyRef:
                key: db-driver
                name: backend-configmap
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                key: db-host
                name: backend-configmap
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                key: db-port
                name: backend-configmap
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: db-user
                name: database-secret
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: database-secret
          - name: DB_DATABASE
            valueFrom:
              secretKeyRef:
                key: db-database
                name: database-secret
      # init container
      initContainers:
        - name: service-checker
          image: busybox
          command: ['sh', '-c', 'until nslookup database.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mysql up; sleep 2; done;']
